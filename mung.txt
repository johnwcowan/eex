Options:
-R      read-only (exit = quit)
-B      back up files on write using Emacs conventions
-D      no readline
-o      capture all of standard input and write it to a file (for pipelines)

Editing commands:
|               filter state to make new state (\ for multiline command)
describe / d    set comment for state
edit / e        make new state with editor

State tree commands:
undo / u        undo last change to state
redo / r        undo undo (regex to choose one)
choices / c     list redo choices

Tag commands:
tag / t         tag current state
goto / g        jump to tagged state
back / b        return from last goto

Termination commands:
exit / x        write file, delete all states, and terminate
quit / q        remove cached files, keep states, and terminate
abandon         delete all states and exit

Miscellaneous commands:
all / a         show whole tree
show / s        file and state metadata, optionally change file name
page / p        view state with pager
help / h        show this help
!               run shell command (\ for multiline command)

Tables: states(table-id, parent-id, tag, command, description);
        stack(id, table-id); current(id);

Purge considerations: file age, file size as fraction of free space, time to regenerate file

