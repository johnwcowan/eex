Options:
-D              no readline
-o              capture all of standard input and write it atomically to a file (for pipelines)

Editing commands:
|               filter state to make new state (\ for multiline command) [shell hy]
describe / d    set comment for state [triv]
edit / e        make new state with editor [shell hy]

State tree commands:
all / a         show whole tree [show]
undo / u        undo last change to state [triv]
redo / r        undo undo (specify a substring) [triv]
choices / c     list redo choices [triv or show]

Tag commands:
tag / t         tag current state with specified tag [triv]
goto / g        jump to specified tagged state [triv]
back / b        return from last goto [triv]

Termination commands:
done            write output file, delete all states, and terminate [exit hy]
quit / q / EOF  just terminate [triv]
purge           remove most cached files, keep  metadata, and terminate [exit]
abandon         delete all states and terminate [triv]

Miscellaneous commands:
show / s        file and state metadata [show]
page / p        view state with $PAGER [shell hy]
help / h        show this help [help]
!               run shell command (\ for multiline command) [shell hy]

Files in the state directory:
0               copy of original file
1-n             cached state files
states          tab-separated file of states: parent, command, description (\t and \n escapes)
tags            tab-separated file of tags: tag, state id
stack           file containing the goto stack using state ids
current         the current state id
lock            pid of currently running mung (can be broken if there is no such pid)

Environment variables:

VISUAL          Editor used by e command
EDITOR          Used if VISUAL is not defined, defaults to vi
PAGER           Pager used by p command, defaults to less.
Modules: globals command load checkpoint hydrate
         triv shell show exit help

